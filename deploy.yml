---
#  WARNING! YOU MUST HAVE A COMPLETE secrets/

# - name: Set up mount point
#   hosts: everyone
#   become: true
#   become_user: dbuchan
#   become_method: sudo
#   roles:
#     - global
#   vars_files:
#     - secrets/{{ my_env }}_secrets.yaml

# - name: Apply the redis configuration
#   hosts: redis
#   become: true
#   become_user: dbuchan
#   become_method: sudo
#   roles:
#    - redis
#   vars_files:
#    - secrets/{{ my_env }}_secrets.yaml

# - name: Install frontend
#   hosts: webserver
#   become: true
#   become_user: dbuchan
#   become_method: sudo
#   roles:
#     - psipredreact
#   vars_files:
#     - secrets/{{ my_env }}_secrets.yaml

# - name: Apply the postgres configuration
#   hosts: dbserver
#   become: true
#   become_user: dbuchan
#   become_method: sudo
#   roles:
#     - dbserver
#   vars_files:
#     - secrets/{{ my_env }}_secrets.yaml

# - name: Apply Analytics Automated head node configuration
#   hosts: aa_head
#   become: true
#   become_user: dbuchan
#   become_method: sudo
#   roles:
#     - djangomachine
#     - aahead
#   vars_files:
#     - secrets/{{ my_env }}_secrets.yaml

# - name: Create blastmachine
#   hosts: blast
#   become: true
#   become_user: root
#   become_method: sudo
#   roles:
#     - djangomachine
#     - blastmachine
#     - blastworkers
#   vars_files:
#     - secrets/{{ my_env }}_secrets.yaml

# - name: Create blast_cache machine
#   hosts: blast_cache
#   become: true
#   become_user: root
#   become_method: sudo
#   roles:
#     - role: djangomachine
#       when: my_env is match ("production")
#     - role: blastcache
#       when: my_env is match ("production")
#   vars_files:
#     - secrets/{{ my_env }}_secrets.yaml

# mempack won't compile in OSX
# domThreader seg faults in OSX

- name: Create Celery worker node
  hosts: celery_worker_node
  become: true
  become_user: root
  become_method: sudo
  roles:
    - djangomachine
    - aaworker
    - merizosearch # do these two first as they take the longest
    - model_parts # do these two first as they take the longest
    - psipred
    - disopred
    - memsatsvm
    - pGenTHREADER 
    - dompred 
    - mempack
    - metsite
    - hspred
    - memembed
    - dmp
    - dmpmetal
    - merizo
    - dmpfold2
    - s4pred
    - ffpred
    # - gsrcl # TBC
  vars_files:
   - secrets/{{ my_env }}_secrets.yaml

## Can only be run if server update is public
## Could probably use inline to add in the slack webhooks from secrets rather than keeping them in the repo
# - name: Create blast update machine
#   hosts: blastupdate
#   become: true
#   become_user: root
#   become_method: sudo
#   roles:
#      - role: blastupdate
#      when: my_env is match ("production")e
#   vars_files:
#     - secrets/{{ my_env }}_secrets.yaml 

###### WE SHOULD ADD THE CLEAN UP AND CRON THINGS HERE TOO, SEE WHAT IS ON THE CURRENT MACHINES
###### DON'T FORGET LOGROTATE AND memsatsvm clean up

# - name: Set assorted packages to be excluded from any auto updates or installs now everything is in place
#   hosts: everyone
#   become: true
#   become_user: root
#   become_method: sudo
#   roles:
#     - closing
#   vars_files:
#     - secrets/{{ my_env }}_secrets.yaml